{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json12",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText8",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Flatten1"
				},
				{
					"name": "Flatten2"
				}
			],
			"script": "source(output(\n\t\tvalue as (WorkerNumber as string, PayGroupId as integer, ProbationPassedDate as string, TitleId as integer, PreviousSurname as string, OtherForenames as string, ReligionId as integer, EmployeeTypeId as integer, FirstForename as string, PayMethodId as integer, OriginalJoinReasonId as integer, WorkTelephoneNumber as string, PersonalEmail as string, AddressId as integer, LastPaidDate as string, OriginalStartDate as string, LastPaidYear as string, Surname as string, KnownAs as string, CurrentJoinReasonId as integer, HomeTelephoneNumber as string, CurrentStartDate as string, DeathDate as string, MaritalStatusEffectiveDate as string, LegislationTypeId as integer, BusinessEmail as string, WorkerId as integer, EthnicOriginId as integer, Initials as string, PayGroupEffectiveDate as string, GenderId as integer, LanguageId as integer, BirthDate as string, NationalInsuranceNo as string, CountryOfBirthId as integer, MaritalStatusId as integer, IsCurrent as boolean, WorkTelephoneExtension as string, LeaveReasonId as integer, BankAccountId as integer, LeaveDate as string, MobileTelephoneNumber as string, LastPaidPeriod as string, ControlGroupId as integer, Age as integer, TemporaryPayments as ({} as string)[], WorkerPosts as ({} as string)[], Gender as ({} as string), CurrentMainWorkerPost as ({} as string), EthnicOrigin as ({} as string), OperatorProfileToWorkers as ({} as string)[], WorkerParentalLeave as ({} as string)[], Title as ({} as string), WorkerPayPeriods as ({} as string)[], ControlGroup as ({} as string), OriginalJoinReason as ({} as string), CountryOfBirth as ({} as string), PayMethod as ({} as string), CurrentYTDs as ({} as string)[], PeriodOnPeriodYTDs as ({} as string)[], BankAccount as ({} as string), WorkerUSCDetails as ({} as string)[], WorkerTaxCodeHistories as ({} as string)[], Address as ({} as string), ReportingLevels as ({} as string), UserSecurityToWorkers as ({} as string)[], WorkerPRSIDetails as ({} as string)[], WorkerPensionSchemes as ({} as string)[], PayGroup as ({} as string), Religion as ({} as string), AbsenceEntitlements as ({} as string)[], CurrentJoinReason as ({} as string), WorkerCostingData as ({} as string)[], EmployeeType as ({} as string), LeaveReason as ({} as string), LegislationType as ({} as string), AbsenceHeaders as ({} as string)[], MaritalStatus as ({} as string), Managers as ({} as string)[], FixedPayments as ({} as string)[], WorkerBenefits as ({} as string)[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource1 foldDown(unroll(value.TemporaryPayments),\n\tmapColumn(\n\t\ttemppayvalue = value.TemporaryPayments.{},\n\t\tWorkerNumber = value.WorkerNumber,\n\t\tPreviousSurname = value.PreviousSurname,\n\t\tFirstForename = value.FirstForename,\n\t\tFixedPayments = value.FixedPayments\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 foldDown(unroll(FixedPayments),\n\tmapColumn(\n\t\tFirstForename,\n\t\ttemppayvalue = temppayvalue,\n\t\tFixedPayments = FixedPayments.{},\n\t\tWorkerNumber\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}