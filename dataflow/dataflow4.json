{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json15",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText8",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Flatten1"
				}
			],
			"script": "source(output(\n\t\tWorkerNumber as string,\n\t\tPayGroupId as integer,\n\t\tProbationPassedDate as string,\n\t\tTitleId as integer,\n\t\tPreviousSurname as string,\n\t\tOtherForenames as string,\n\t\tReligionId as integer,\n\t\tEmployeeTypeId as integer,\n\t\tFirstForename as string,\n\t\tPayMethodId as integer,\n\t\tOriginalJoinReasonId as integer,\n\t\tWorkTelephoneNumber as string,\n\t\tPersonalEmail as string,\n\t\tAddressId as integer,\n\t\tLastPaidDate as string,\n\t\tOriginalStartDate as string,\n\t\tLastPaidYear as string,\n\t\tSurname as string,\n\t\tKnownAs as string,\n\t\tCurrentJoinReasonId as integer,\n\t\tHomeTelephoneNumber as string,\n\t\tCurrentStartDate as string,\n\t\tDeathDate as string,\n\t\tMaritalStatusEffectiveDate as string,\n\t\tLegislationTypeId as integer,\n\t\tBusinessEmail as string,\n\t\tWorkerId as integer,\n\t\tEthnicOriginId as integer,\n\t\tInitials as string,\n\t\tPayGroupEffectiveDate as string,\n\t\tGenderId as integer,\n\t\tLanguageId as integer,\n\t\tBirthDate as string,\n\t\tNationalInsuranceNo as string,\n\t\tCountryOfBirthId as integer,\n\t\tMaritalStatusId as integer,\n\t\tIsCurrent as boolean,\n\t\tWorkTelephoneExtension as string,\n\t\tLeaveReasonId as integer,\n\t\tBankAccountId as integer,\n\t\tLeaveDate as string,\n\t\tMobileTelephoneNumber as string,\n\t\tLastPaidPeriod as string,\n\t\tControlGroupId as integer,\n\t\tAge as integer,\n\t\tTemporaryPayments as ({} as string)[],\n\t\tWorkerPosts as ({} as string)[],\n\t\tGender as ({} as string),\n\t\tCurrentMainWorkerPost as ({} as string),\n\t\tEthnicOrigin as ({} as string),\n\t\tOperatorProfileToWorkers as ({} as string)[],\n\t\tWorkerParentalLeave as ({} as string)[],\n\t\tTitle as ({} as string),\n\t\tWorkerPayPeriods as ({} as string)[],\n\t\tControlGroup as ({} as string),\n\t\tOriginalJoinReason as ({} as string),\n\t\tCountryOfBirth as ({} as string),\n\t\tPayMethod as ({} as string),\n\t\tCurrentYTDs as ({} as string)[],\n\t\tPeriodOnPeriodYTDs as ({} as string)[],\n\t\tBankAccount as ({} as string),\n\t\tWorkerUSCDetails as ({} as string)[],\n\t\tWorkerTaxCodeHistories as ({} as string)[],\n\t\tAddress as ({} as string),\n\t\tReportingLevels as ({} as string),\n\t\tUserSecurityToWorkers as ({} as string)[],\n\t\tWorkerPRSIDetails as ({} as string)[],\n\t\tWorkerPensionSchemes as ({} as string)[],\n\t\tPayGroup as ({} as string),\n\t\tReligion as ({} as string),\n\t\tAbsenceEntitlements as ({} as string)[],\n\t\tCurrentJoinReason as ({} as string),\n\t\tWorkerCostingData as ({} as string)[],\n\t\tEmployeeType as ({} as string),\n\t\tLeaveReason as ({} as string),\n\t\tLegislationType as ({} as string),\n\t\tAbsenceHeaders as ({} as string)[],\n\t\tMaritalStatus as ({} as string),\n\t\tManagers as ({} as string)[],\n\t\tFixedPayments as ({} as string)[],\n\t\tWorkerBenefits as ({} as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments',\n\tbackslashEscape: true) ~> source1\nsource1 foldDown(unroll(TemporaryPayments, TemporaryPayments),\n\tmapColumn(\n\t\ttp = TemporaryPayments.{},\n\t\tWorkerNumber,\n\t\tPreviousSurname,\n\t\tFirstForename\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}